<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       ">
       
       <bean id="shiroFormAuthenticationFilter" class="com.liyang.module.authc.shiro.ShiroFormAuthenticationFilter"></bean>
       <!--realm配置，realm是shiro的桥梁，它主要是用来判断subject是否可以登录及权限等-->  
      <bean id="shiroRealm" class="com.liyang.webadmin.shiro.ShiroRealm"> </bean>  
       
       <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <!--单个realm使用realm,如果有多个realm，使用realms属性代替-->  
        <property name="realm" ref="shiroRealm" />  
    </bean>  
  
    
    
    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/login"/>
    </bean>

	<!-- 程序中使用shiro注解 -->
     <!--shiro过滤器配置，bean的id值须与web中的filter-name的值相同-->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <property name="securityManager" ref="securityManager" />  
        <!-- 没有权限或者失败后跳转的页面 -->  
        <property name="loginUrl" value="/login" />  
        <property name="successUrl" value="/home" />  
        <property name="unauthorizedUrl" value="" /> 
        <property name="filters">
            <map>
                <entry key="authc" value-ref="shiroFormAuthenticationFilter"/>
            </map>
        </property> 
        <property name="filterChainDefinitions">  
            <value>  
                /login = authc
                /static/** = anon
                /index = anon
                /logout= logout  
               /** =  authc
            </value>  
        </property>  
    </bean>  
    
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	
</beans>